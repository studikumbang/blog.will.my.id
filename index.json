[{"content":" Pendahuluan Pada catatan ini saya akan mendokumentasikan saat saya mengaktifkan;\n Auto login username saya ketika saya menyalakan laptop Langsung menjalankan command startx setelah saya login  Jadi yang saya mau yaitu, setelah saya memencet tombol power saya tinggal menunggu hingga masuk ke desktop tanpa login manual maupun menulis command startx setelah login. Disini saya menggunakan wildy sebagai username saya.\n PERHATIAN  DWYOR (Do With Your Own Risk). Ini hanya sebagai dokumentasi saya saja, jadi jangan langsung copy-paste. Silahkan dibaca dulu.   Solusi Permasalahan  Edit /etc/gettytab lalu saya menambahkan seperti baris dibawah ini.  A|Al|Autologin console:\\ :ht:np:sp#115200:al=wildy  Edit /etc/ttys. Karena saya ingin login di tty0, maka saya edit pada baris ttyv0. ttyv0\t\u0026quot;/usr/libexec/getty Al\u0026quot;\txterm\tonifexists secure  Edit .zshrc pada direktori home if [ `/usr/bin/tty` = '/dev/ttyv0' ]; then startx \u0026amp;\u0026amp; exit fi    Penutup Sekian dari saya, mohon maaf, terimakasih, dan semoga bermanfaat.\n ","permalink":"https://blog.will.my.id/posts/autologin-freebsd/","summary":"Pendahuluan Pada catatan ini saya akan mendokumentasikan saat saya mengaktifkan;\n Auto login username saya ketika saya menyalakan laptop Langsung menjalankan command startx setelah saya login  Jadi yang saya mau yaitu, setelah saya memencet tombol power saya tinggal menunggu hingga masuk ke desktop tanpa login manual maupun menulis command startx setelah login. Disini saya menggunakan wildy sebagai username saya.\n PERHATIAN  DWYOR (Do With Your Own Risk). Ini hanya sebagai dokumentasi saya saja, jadi jangan langsung copy-paste.","title":"FreeBSD: Cara Otomatis Login dan Menjalankan Xorg Tanpa Display Manager"},{"content":" Pendahuluan Pada catatan ini saya akan mendokumentasikan bagaimana saat saya mengatasi tidak berfungsinya tombol keyboard untuk mengatur kecerahan dan volume laptop (Lenovo IdeaPad 320-14ISK). Sementara saya mengatur kecerahan dan volume menggunakan command intel_backlight dan mixer. Berikut konfigurasi keybinding dwm saya.\n//audio static const char *upvol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;+10\u0026#34;, NULL }; static const char *downvol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;-10\u0026#34;, NULL }; static const char *mutevol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;mute\u0026#34;, NULL }; //brightness static const char *upbrig[] = { \u0026#34;intel_backlight\u0026#34;, \u0026#34;incr\u0026#34;, NULL }; static const char *downbrig[] = { \u0026#34;intel_backlight\u0026#34;, \u0026#34;decr\u0026#34;, NULL }; static Key keys[] = { { 0, XF86XK_AudioLowerVolume, spawn, {.v = downvol } }, { 0, XF86XK_AudioMute, spawn, {.v = mutevol } }, { 0, XF86XK_AudioRaiseVolume, spawn, {.v = upvol } }, { 0, XF86XK_MonBrightnessUp, spawn, {.v = upbrig } }, { 0, XF86XK_MonBrightnessDown, spawn, {.v = downbrig } }, }  PERHATIAN  DWYOR (Do With Your Own Risk). Ini hanya sebagai dokumentasi saya saja, jadi jangan langsung copy-paste. Silahkan dibaca dulu.   Solusi Permasalahan Setelah saya mencari di forum freebsd, saya belum menemukan cara memperbaiki mediakey untuk laptop yang setipe dengan saya. Namun saya menemukan laman ini. Lalu saya mencoba load acpi_ibm ; /boot/loader.conf\nacpi_ibm_load=\u0026#34;YES\u0026#34; Ternyata masih belum beruntung, lalu saya iseng pindah acpi_video dari;\n/boot/loader.conf\n#load acpi_video=\u0026#34;YES\u0026#34; ke kldlist /etc/rc.conf\nkldlist=\u0026quot;i915kms fusefs acpi_video\u0026quot; Langsung berhasil, langsung jalan brightness key dan volume key pada laptop saya. ðŸ˜„\n Unknown Bug Entah kenapa, tombol prtsc seketika pindah ke tombol PgUp setelah saya menggunakan acpi_ibm. Mungkin di lain catatan akan lanjut saya perbaiki.\n Penutup Sekian dari saya, mohon maaf, terimakasih, dan semoga bermanfaat.\n ","permalink":"https://blog.will.my.id/posts/fix-multimedia-keys-freebsd/","summary":"Pendahuluan Pada catatan ini saya akan mendokumentasikan bagaimana saat saya mengatasi tidak berfungsinya tombol keyboard untuk mengatur kecerahan dan volume laptop (Lenovo IdeaPad 320-14ISK). Sementara saya mengatur kecerahan dan volume menggunakan command intel_backlight dan mixer. Berikut konfigurasi keybinding dwm saya.\n//audio static const char *upvol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;+10\u0026#34;, NULL }; static const char *downvol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;-10\u0026#34;, NULL }; static const char *mutevol[] = { \u0026#34;mixer\u0026#34;, \u0026#34;-s\u0026#34;, \u0026#34;vol\u0026#34;, \u0026#34;mute\u0026#34;, NULL }; //brightness static const char *upbrig[] = { \u0026#34;intel_backlight\u0026#34;, \u0026#34;incr\u0026#34;, NULL }; static const char *downbrig[] = { \u0026#34;intel_backlight\u0026#34;, \u0026#34;decr\u0026#34;, NULL }; static Key keys[] = { { 0, XF86XK_AudioLowerVolume, spawn, {.","title":"FreeBSD: Memperbaiki Brightness dan Volume Control Pada Keyboard Laptop"},{"content":" Pengantar Setelah kemarin membahas install go, eksekusi go run, go build ke Helloworld.go maka sekarang saya akan membuat program Helloworld.go.\n Repository Disini saya akan menggunakan repository github saya\n Clone repo saya(opsional) git clone https://github.com/studikumbang/Belajar-Go.git  Masuk ke direktori cd Belajar-Go/eps1.1    Hello World Dibawah ini merupakan penulisan kode sederhana untuk memunculkan teks \u0026ldquo;Hello World\u0026rdquo; di output terminal\npackage main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello World\u0026#34;) }  Pembahasan  Penggunaan keyword Package  Setiap file program harus memiliki package. Setiap project harus ada minimal satu file dengan nama package main. File yang ber-package main, akan di eksekusi pertama kali ketika program di jalankan. Berikut adalah contoh penulisan mengunakan keyword package.\npackage \u0026lt;namapackage\u0026gt; package main  Penggunaan keyword import  Keyword import digunakan untuk meng-import atau memasukan package lain kedalam file program, agar isi dari package yang di-import bisa dijalankan.\nimport \u0026#34;\u0026lt;namapackage\u0026gt;\u0026#34; import \u0026#34;fmt\u0026#34;  Penggunaan import fmt  Package fmt merupakan salah satu package bawaan yang disediakan oleh Go, isinya banyak fungsi untuk keperluan I/O yang berhubungan dengan text. Jika saya ingin menggunakan fmt.Println() untuk memunculkan teks hello world, maka saya harus mengimpor fmt terlebih dahulu agar fmt.Println() bisa jalan.\nimport \u0026#34;fmt\u0026#34;  Penggunaan fungsi main()  Dalam sebuah proyek harus ada file program yang didalamnya berisi sebuah fungsi bernama main(). Fungsi tersebut harus berada di file yang package-nya bernama main. Fungsi main() adalah yang dipanggil pertama kali pada saat eksekusi program. Contoh penulisan fungsi main:\nfunc main() { }  Penggunaan Fungsi fmt.Println Fungsi fmt.Println() digunakan untuk memunculkan text ke layar (pada konteks ini, terminal atau CMD). Di program pertama yang telah kita buat, fungsi ini memunculkan tulisan Hello world. Contoh penulisan fmt.Println() sebagai berikut  fmt.Println(\u0026#34;isipesan\u0026#34;) Fungsi fmt.Println() dapat menampung parameter yang tidak terbatas jumlahnya. Semua data parameter akan dimunculkan dengan pemisah tanda spasi.\nfmt.Println(\u0026#34;Oi,\u0026#34;, \u0026#34;piye\u0026#34;, \u0026#34;kabarmu\u0026#34;, \u0026#34;slur?\u0026#34;) maka akan keluar output: Oi, piye kabarmu slur? (file: Helloworld2.go)\n Penutup Sekian dari saya, mohon maaf, terimakasih, dan semoga bermanfaat.\n ","permalink":"https://blog.will.my.id/posts/belajar-go-eps1_1b/","summary":"Pengantar Setelah kemarin membahas install go, eksekusi go run, go build ke Helloworld.go maka sekarang saya akan membuat program Helloworld.go.\n Repository Disini saya akan menggunakan repository github saya\n Clone repo saya(opsional) git clone https://github.com/studikumbang/Belajar-Go.git  Masuk ke direktori cd Belajar-Go/eps1.1    Hello World Dibawah ini merupakan penulisan kode sederhana untuk memunculkan teks \u0026ldquo;Hello World\u0026rdquo; di output terminal\npackage main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello World\u0026#34;) }  Pembahasan  Penggunaan keyword Package  Setiap file program harus memiliki package.","title":"Belajar Golang Eps 1.1B : Hello World"},{"content":" Install Golang Install golang di Macos dan Linux\nLinux  Install golang dari website golang  Download packagenya, misal waktu saya menulis catatan ini go1.16.7.linux-amd64.tar.gz Masuk ke direktori yang saya download tadi, lalu install dengan menggunakan perintah sudo rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go*.tar.gz  Tambah PATH Environment Variabel  Edit .bashrc, saya menggunakan zsh maka saya taruh di .zshrc  # $HOME/.zprofile export PATH=$PATH:/usr/local/go/bin  Cek golang di terminal go version Maka akan muncul output\nâžœ ~ go version go version go1.16.7 linux/amd64     Macos  Download golang pkg dari website golang install pkg seperti biasa Cek golang di terminal go version Maka akan muncul output\nâžœ ~ go version go version go1.16.7 darwin/amd64    Perintah Go build dan Go run Disini saya akan menggunakan repository github saya\n Clone repo saya(opsional) git clone https://github.com/studikumbang/Belajar-Go.git  Masuk ke direktori cd Belajar-Go/eps1.1   go run Perintah ini dikunakan untuk eksekusi file program yang berekstensi go. Cara penggunaannya seperti berikut. Saya akan mengeksekusi file Helloworld.go yang berada didalam folder Belajar-Go/eps1.1/\ngo Helloworld.go maka output yang akan keluar\nHello world go build Perintah ini digunakan untuk mengkompilasi program go. Sebenarnya ketika eksekusi program menggunakan go run, terjadi proses kompilasi juga. File hasil kompilasi akan disimpan pada folder temporary untuk selanjutnya langsung dieksekusi.\n  Berbeda dengan go run, go build menghasilkan file executable atau binary pada folder yang sedang aktif. Contohnya sebagai berikut\n Ini merupakan isi folder eps1.1 sebelum eksekusi go build eps1.1 â”œâ”€â”€ Helloworld2.go â”œâ”€â”€ Helloworld.go â””â”€â”€ README.md  Saya akan mengeksekusi go build ke Helloworld.go sebagai berikut go build Helloworld.go  Maka output yang dikeluarkan eps1.1 â”œâ”€â”€ Helloworld \u0026lt;--- ada file binary baru â”œâ”€â”€ Helloworld2.go â”œâ”€â”€ Helloworld.go â””â”€â”€ README.md  Dan file binary baru tersebut bisa langsung di eksekusi tanpa perintah go âžœ eps1.1 git:(main) âœ— ./Helloworld Hello world      Penutup Sekian dari saya, mohon maaf, terimakasih, dan semoga bermanfaat.\n ","permalink":"https://blog.will.my.id/posts/belajar-go-eps1_1a/","summary":"Install Golang Install golang di Macos dan Linux\nLinux  Install golang dari website golang  Download packagenya, misal waktu saya menulis catatan ini go1.16.7.linux-amd64.tar.gz Masuk ke direktori yang saya download tadi, lalu install dengan menggunakan perintah sudo rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go*.tar.gz  Tambah PATH Environment Variabel  Edit .bashrc, saya menggunakan zsh maka saya taruh di .zshrc  # $HOME/.zprofile export PATH=$PATH:/usr/local/go/bin  Cek golang di terminal go version Maka akan muncul output","title":"Belajar Golang Eps 1.1A : Install Go, Perintah go build dan go run "},{"content":" Pengantar Go adalah bahasa pemrograman yang diketik secara statis, dikompilasi dan dirancang di Google oleh Robert Griesemer, Rob Pike, dan Ken Thompson. Go secara sintak mirip dengan C , tetapi dengan keamanan memori, pengumpulan sampah, pengetikan struktural, dan konkurensi gaya CSP. Sumber dari wikipedia dan ditranslate oleh Google Translate.\n Kenapa memilih GO? karena aku sebenarnya penasaran hehe. Lumayan banyak aplikasi yang kupakai tapi dibuatnya dengan go (pastinya bukan aku yang buat), misalnya yay dan hugo. Gitu aja sih haihaihai\n Catatan penting!  Ini bukan tutorial belajar golang, namun dokumentasi ketika saya belajar golang Dokumentasi atau catatan saya nanti dimulai di 1.1 dan gatau sampai berapa. Haihaihai Tag Linux dan Macos setelah ini kuhapus di episode 1.1 , biar post lain ga ketumpuk Pada saat saya menulis catatan ini, saya menggunakan go version go1.16.7 linux/amd64 Disini saya menggunakan repository github saya   Referensi Terimakasih kepada\n Golang Channel Telegram Golang Indonesia dasarpemrogramangolang.novalagung.com   Penutup Sekian dari saya, mohon maaf, terimakasih, dan semoga bermanfaat.\n ","permalink":"https://blog.will.my.id/posts/belajar-go-pendahuluan/","summary":"Pengantar Go adalah bahasa pemrograman yang diketik secara statis, dikompilasi dan dirancang di Google oleh Robert Griesemer, Rob Pike, dan Ken Thompson. Go secara sintak mirip dengan C , tetapi dengan keamanan memori, pengumpulan sampah, pengetikan struktural, dan konkurensi gaya CSP. Sumber dari wikipedia dan ditranslate oleh Google Translate.\n Kenapa memilih GO? karena aku sebenarnya penasaran hehe. Lumayan banyak aplikasi yang kupakai tapi dibuatnya dengan go (pastinya bukan aku yang buat), misalnya yay dan hugo.","title":"Belajar Golang Eps 1.0"},{"content":"Pengantar  Docker-compose adalah alat untuk menjalankan aplikasi Docker multi-kontainer sekaligus. Dengan Compose, kamu menggunakan file YAML untuk mengonfigurasi layanan aplikasimu.\nPaket yang diperlukan  python3 python3-pip Proses instalasi  Proses pertama : Install paket yang diperlukan Install python python3-pip. Sesuaikan dengan distribusi yang sedang kamu pakai, jangan langsung copas semua :D\nDistribusi turunan Arch Linux sudo pacman -Sy python3 python-pip Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install python3 python3-pip OpenWRT opkg update \u0026amp; opkg install python3 python3-pip  Proses kedua : Install Docker-compose Pada proses ini semua distribusi sama. Jadi langsung saja :D\npip install docker-compose Opsional: kalau docker-compose juga diakses dalam keadaan root\nsudo pip install docker-compose Hasil  Jika sudah sukses tandanya Docker-compose sudah selesai diinstall Coba test Docker-compose mu!\ndocker-compose -v Maka output yang dikeluarkan\nPenutup  Sekian dari saya, Mohon maaf dan terimakasih semoga bermanfaat.\n","permalink":"https://blog.will.my.id/posts/docker-compose/","summary":"Pengantar  Docker-compose adalah alat untuk menjalankan aplikasi Docker multi-kontainer sekaligus. Dengan Compose, kamu menggunakan file YAML untuk mengonfigurasi layanan aplikasimu.\nPaket yang diperlukan  python3 python3-pip Proses instalasi  Proses pertama : Install paket yang diperlukan Install python python3-pip. Sesuaikan dengan distribusi yang sedang kamu pakai, jangan langsung copas semua :D\nDistribusi turunan Arch Linux sudo pacman -Sy python3 python-pip Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install python3 python3-pip OpenWRT opkg update \u0026amp; opkg install python3 python3-pip  Proses kedua : Install Docker-compose Pada proses ini semua distribusi sama.","title":"Docker Compose Install"},{"content":"Awal masalah  Ghostscriptku ga bisa kebuka, ada masalah seperti ini. Tujuan  Install dependensi ghostscript.\nSolusi  Install python-lxml\nDistribusi turunan Arch Linux sudo pacman -Sy python-lxml Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install python-lxml Hasil  Akhirnya ghostscript saya berhasil Penutup  Sekian dari saya, semoga bermanfaat.\n","permalink":"https://blog.will.my.id/posts/lxml/","summary":"Awal masalah  Ghostscriptku ga bisa kebuka, ada masalah seperti ini. Tujuan  Install dependensi ghostscript.\nSolusi  Install python-lxml\nDistribusi turunan Arch Linux sudo pacman -Sy python-lxml Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install python-lxml Hasil  Akhirnya ghostscript saya berhasil Penutup  Sekian dari saya, semoga bermanfaat.","title":"Fixing python-lxml"},{"content":"Awal masalah  Inkscape saya tidak bisa membuka file eps yang dihasilkan adobe ilustrator maupun coreldraw.\nTujuan  Disini saya pengen inkscape ku bisa membuka file eps di inkscape tanpa kendala.\nSolusi  Install ghostscript terlebih dahulu.\nInstalasi ghostscript Distribusi turunan Arch Linux sudo pacman -Sy ghostscript Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install ghostscript Windows download dan instal ghostscript disini\nMac OS brew install ghostscript Penutup  Sekian dari saya, semoga bermanfaat.\nNote  Ternyata untuk ghostscript di linux masih butuh dependensi yaitu python-lxml, caranya disini.\n","permalink":"https://blog.will.my.id/posts/eps-inkscape/","summary":"Awal masalah  Inkscape saya tidak bisa membuka file eps yang dihasilkan adobe ilustrator maupun coreldraw.\nTujuan  Disini saya pengen inkscape ku bisa membuka file eps di inkscape tanpa kendala.\nSolusi  Install ghostscript terlebih dahulu.\nInstalasi ghostscript Distribusi turunan Arch Linux sudo pacman -Sy ghostscript Distribusi turunan Debian sudo apt-get update \u0026amp;\u0026amp; apt-get install ghostscript Windows download dan instal ghostscript disini\nMac OS brew install ghostscript Penutup  Sekian dari saya, semoga bermanfaat.","title":"Buka file EPS dengan Inkscape"},{"content":"Prakata  Mungkin teman-teman sudah tidak asing dengan spotify, platfrom streaming musik terbesar di dunia. Saya sendiri sudah menggunakan spotify sejak 2018. Alasan saya betah menggunakan spotify ya karena lagunya sangat lengkap dan lagunya ga besar2 amat, tetapi spotify bisa memakan 30% dari ram saya. Nah makanya saya pakai ncspot karena jauh lebih enteng, hanya memakan 20 an MB dari ram saya.\nKelebihan dan Kekurangan  Kelebihan  - Jauh lebih ringan daripada spotify  Kekurangan  - Wajib premium - Ga bisa download lagu  Instalasi  Distribusi turunan Arch Linux yay -S ncspot Mac OS brew install ncspot Tahap Eksekusi  ncspot Ketik perintah diatas untuk memulai ncspot lalu masukkan akun anda! Untuk perintah lebih lengkap silahkan kunjungi Ncspot\n","permalink":"https://blog.will.my.id/posts/ncspot/","summary":"Prakata  Mungkin teman-teman sudah tidak asing dengan spotify, platfrom streaming musik terbesar di dunia. Saya sendiri sudah menggunakan spotify sejak 2018. Alasan saya betah menggunakan spotify ya karena lagunya sangat lengkap dan lagunya ga besar2 amat, tetapi spotify bisa memakan 30% dari ram saya. Nah makanya saya pakai ncspot karena jauh lebih enteng, hanya memakan 20 an MB dari ram saya.\nKelebihan dan Kekurangan  Kelebihan  - Jauh lebih ringan daripada spotify  Kekurangan  - Wajib premium - Ga bisa download lagu  Instalasi  Distribusi turunan Arch Linux yay -S ncspot Mac OS brew install ncspot Tahap Eksekusi  ncspot Ketik perintah diatas untuk memulai ncspot lalu masukkan akun anda!","title":"Ncspot, Spotify Ringan Berbasis Terminal User Interface"}]